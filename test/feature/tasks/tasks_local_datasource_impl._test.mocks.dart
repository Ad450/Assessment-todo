// Mocks generated by Mockito 5.4.2 from annotations
// in todo/test/feature/tasks/tasks_local_datasource_impl._test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i2;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:todo/core/storage/hive.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFuture_0<T1> extends _i1.SmartFake implements _i2.Future<T1> {
  _FakeFuture_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HiveService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHiveService extends _i1.Mock implements _i3.HiveService {
  MockHiveService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void deleteItem(
    dynamic key,
    String? boxName,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #deleteItem,
          [
            key,
            boxName,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Future<List<dynamic>> readAll(String? boxName) => (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [boxName],
        ),
        returnValue: _i2.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i2.Future<List<dynamic>>);

  @override
  _i2.Future<T> readItem<T>(
    dynamic key,
    String? boxName, {
    dynamic defaultValue,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readItem,
          [
            key,
            boxName,
          ],
          {#defaultValue: defaultValue},
        ),
        returnValue: _i4.ifNotNull(
              _i4.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #readItem,
                  [
                    key,
                    boxName,
                  ],
                  {#defaultValue: defaultValue},
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #readItem,
                [
                  key,
                  boxName,
                ],
                {#defaultValue: defaultValue},
              ),
            ),
      ) as _i2.Future<T>);

  @override
  _i2.Future<void> saveItem<T>(
    T? item,
    String? boxName, {
    dynamic key,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveItem,
          [
            item,
            boxName,
          ],
          {#key: key},
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<void> deleteAll(String? boxName) => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [boxName],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
}
